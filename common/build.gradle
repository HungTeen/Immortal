plugins {
    id("multiplatform-convention")

    alias(libs.plugins.moddevgradle)
}

version = modVersion
var mcVersion = libs.versions.minecraft.asProvider().get()
base {
    archivesName = "${modName}-common-${mcVersion}"
}

neoForge {
    // Look for versions on https://projects.neoforged.net/neoforged/neoform
    neoFormVersion = libs.versions.neoform.get()
    validateAccessTransformers = true
    accessTransformers.files.setFrom("src/main/resources/META-INF/accesstransformer-nf.cfg")

    parchment{
        minecraftVersion.set(libs.versions.parchment.minecraft.get())
        mappingsVersion.set(libs.versions.parchment.asProvider().get())
    }
}

dependencies {
    compileOnly(libs.mixin)
    compileOnly(libs.mixinextras.common)
}

tasks.register('apiJar', Jar) {
    dependsOn classes
    archiveClassifier = 'api'

    include "hungteen/${modId}/api/**"

    // Sources included because of MinecraftForge/ForgeGradle#369
    from(sourceSets.main.allJava)
    from(sourceSets.main.output)
}

artifacts {
    archives apiJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = modName
            version "${mcVersion}-${modVersion}-common"
            from components.java
        }
    }
    repositories {
        mavenLocal()
    }
}